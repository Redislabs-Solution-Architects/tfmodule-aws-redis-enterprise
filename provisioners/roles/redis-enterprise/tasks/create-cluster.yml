---
# Internal/external Ip for all nodes
- name: Get the IPs
  set_fact:
    ip_ext_node: "{{ inventory_hostname }}"
    ip_int_node: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

#####################
# Bootstrap Cluster #
#####################


- name: Check Cluster Creation Status Before
  uri:
    url: "{{bootstrap_endpoint}}"
    method: GET
    return_content: yes
    validate_certs: no
    user: "{{ re_username }}"
    password: "{{ re_password }}"
    force_basic_auth: yes
    follow_redirects: all
    headers:
      cache-control: no-cache
  register: cluster_intial_check

- name: Set Cluster initial check state
  set_fact:
    cluster_created: "{{ cluster_intial_check is defined and cluster_intial_check.json.bootstrap_status.state == 'completed' }}"


- name: Creating Cluster on Master
  uri:
    url: "{{bootstrap_endpoint}}/create_cluster"
    method: POST
    return_content: yes
    validate_certs: no
    follow_redirects: all
    body: "{{ lookup('template','create_cluster.json.j2') }}"
    body_format: json
    headers:
        Content-Type: "application/json"
  when:
    - not cluster_created

- name: Check Cluster Creation Status After
  uri:
    url: "{{bootstrap_endpoint}}"
    method: GET
    return_content: yes
    validate_certs: no
    user: "{{ re_username }}"
    password: "{{ re_password }}"
    force_basic_auth: yes
    follow_redirects: all
    headers:
        cache-control: no-cache
  register: cluster_creation_check
  until: cluster_creation_check.json.bootstrap_status.state == 'completed'
  delay: 2
  retries: 20
  when:
    - not cluster_created
